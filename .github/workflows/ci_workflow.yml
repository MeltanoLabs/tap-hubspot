### A CI workflow template that runs linting and python testing

name: Test tap-hubspot


on:
  push:
    branches: [ main ]
    paths:
    - .github/workflows/ci_workflow.yml
    - .github/workflows/constraints.txt
    - tap_hubspot/**
    - pyproject.toml
    - poetry.lock
    - tox.ini
  pull_request:
    branches: [ main ]
    paths:
    - .github/workflows/ci_workflow.yml
    - .github/workflows/constraints.txt
    - tap_hubspot/**
    - pyproject.toml
    - poetry.lock
    - tox.ini
  workflow_dispatch:

env:
  FORCE_COLOR: 1

jobs:
  linting:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only lint using the primary version used for dev
        python-version: [3.13]

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
    - env:
        UV_CONSTRAINT: ${{ github.workspace }}/.github/workflows/constraints.txt
        UV_PYTHON: ${{ matrix.python-version }}
      run: |
        uv tool install poetry
        uvx tox -e lint

  pytest:

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    strategy:
      max-parallel: 2
      matrix:
        python-version:
        - "3.14"
        - "3.13"
        - "3.12"
        - "3.11"
        - "3.10"

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
    - name: Test with pytest
      id: test_pytest
      continue-on-error: false
      env:
        TAP_HUBSPOT_ACCESS_TOKEN: ${{secrets.TAP_HUBSPOT_ACCESS_TOKEN}}
        UV_CONSTRAINT: ${{ github.workspace }}/.github/workflows/constraints.txt
        UV_PYTHON: ${{ steps.setup-python.outputs.python-path }}
      run: |
        uv tool install poetry
        poetry install
        poetry run pytest --capture=no
